env:
  global:
  - VERSION=3.5.0-SNAPSHOT
  - secure: CLXG628BgMfzV8AOI+jhLiC0D1XjWuuxIzgDyYqvFI84MEJuva22ohwzfsP3NhZNuQREtWNzVusj+B9b5t8Yh4drQIx0ynb1crb0obVBePOxYuCdeCbdvCJpAY3qRbzvkhzjW2iR8EGfW5FXVOMAu9quoYhxkdrEuGD7pUKJ/UHovjgirEpdvyBtVxwg5Dpq9gK31bz5nan4Re1qy4MDvfLdLZTo/xpWgGhmYCC2cGrMICSbIpfZBgdd37jZEAcgYjZbTezr7anhqpFQsB/ClpnEANlAQ2kmcMP5gv8JkTe4DDvHr70e92JVAgTHZJX6BXolai7VlkOQHupKLz9l4pVHHJcgAu7W08KCf4bj/oxo5479sQMu4Lfejs9g3aSQH2jr2m0c2DG4gscL8eMgZHVs+AKdXng1Bgx6Jl/x6fl0ae3jheYb7CJmwRL7Ttl9zzQCIiY/8Zzctykk4pYSy/ciFycebKRN3hRg/h0zHy2oZEP5GGeXe7nJI08JDuzl6MU6JWiaDWGbLqGVDxraqGmamC9onnGZJe5Ob1o4845uXRUKKNW6841ZZp70kXxvsH3JsRYdomKHu80CriikXk0WSO+nEi3jkM27lbPszqwylT+ylx6VogT1KahFa0LTbLTDpP7Kt85LatlRYShnu5x44ZpK5DqfJXZBJ6M1m+k=

sudo: required
dist: trusty

services:
- docker

branches:
  only:
  - /.*/

before_install:

install:

script:
# C Linux x64
- docker run --rm -v $(pwd)/C:/workdir:Z -e CROSS_TRIPLE=x86_64-linux-gnu -it multiarch/crossbuild make
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C/target/x86_64-linux-gnu/libeventbus.a -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/C/$VERSION/libeventbus-x86_64-linux-gnu-$VERSION.a; fi
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C/target/x86_64-linux-gnu/example.exe -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/C/$VERSION/example-x86_64-linux-gnu-$VERSION; fi
# C Windows x32
- docker run --rm -v $(pwd)/C:/workdir:Z -e CROSS_TRIPLE=i686-w64-mingw32 -it multiarch/crossbuild make
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C/target/i686-w64-mingw32/libeventbus.a -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/C/$VERSION/libeventbus-i686-w64-mingw32-$VERSION.a; fi
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C/target/i686-w64-mingw32/example.exe -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/C/$VERSION/example-i686-w64-mingw32-$VERSION.exe; fi
# C Windows x64
- docker run --rm -v $(pwd)/C:/workdir:Z -e CROSS_TRIPLE=x86_64-w64-mingw32 -it multiarch/crossbuild make
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C/target/x86_64-w64-mingw32/libeventbus.a -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/C/$VERSION/libeventbus-x86_64-w64-mingw32-$VERSION.a; fi
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C/target/x86_64-w64-mingw32/example.exe -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/C/$VERSION/example-x86_64-w64-mingw32-$VERSION.exe; fi
# C Darwin x64
- docker run --rm -v $(pwd)/C:/workdir:Z -e CROSS_TRIPLE=x86_64-apple-darwin -it multiarch/crossbuild make
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C/target/x86_64-apple-darwin14/libeventbus.a -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/C/$VERSION/libeventbus-x86_64-apple-darwin-$VERSION.a; fi
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C/target/x86_64-apple-darwin14/example.exe -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/C/$VERSION/example-x86_64-apple-darwin-$VERSION; fi
# C Sharp
- docker run --rm -v $(pwd)/C#:/workdir:Z -it microsoft/dotnet:latest /workdir/vertx-eventbus/build.sh
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C#/vertx-eventbus/bin/Debug/netcoreapp1.1/vertx-eventbus.dll -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/dotnet-core-1.1/$VERSION/vertx-eventbus-$VERSION.dll; fi
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T C#/vertx-eventbus/bin/Debug/netcoreapp1.1/vertx-eventbus.pdb -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/dotnet-core-1.1/$VERSION/vertx-eventbus-$VERSION.pdb; fi
# Node
- docker run --rm -v $(pwd)/nodejs:/workdir:Z -it node:alpine /workdir/build.sh
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T nodejs/vertx3-tcp-eventbus-client-3.4.0.tgz -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/node/$VERSION/vertx3-tcp-eventbus-client-$VERSION.tgz; fi
# Python
- docker run --rm -v $(pwd)/python:/workdir:Z -it python:alpine /workdir/build.sh
- if [[ ! $VERSION == *"-SNAPSHOT" ]]; then curl -T python/dist/Vertx-3.4.0.tar.gz -u$APIKEY https://api.bintray.com/content/vertx/vertx-eventbus-bridge-clients/python/$VERSION/Vertx-$VERSION.tar.gz; fi
# Go
- docker run --rm -v $(pwd)/Go:/workdir:Z -it golang:latest /workdir/build.sh

after_install:
